<?xml version='1.0'?>
<signatures version='0.9'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='SCDynamicStoreContext' type64='{_SCDynamicStoreContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_SCDynamicStoreContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field name='version'/>
<field name='info'/>
<field name='retain'/>
<field name='release'/>
<field name='copyDescription'/>
</struct>
<struct name='SCNetworkConnectionContext' type64='{_SCNetworkConnectionContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_SCNetworkConnectionContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field name='version'/>
<field name='info'/>
<field name='retain'/>
<field name='release'/>
<field name='copyDescription'/>
</struct>
<struct name='SCNetworkReachabilityContext' type64='{_SCNetworkReachabilityContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_SCNetworkReachabilityContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field name='version'/>
<field name='info'/>
<field name='retain'/>
<field name='release'/>
<field name='copyDescription'/>
</struct>
<struct name='SCPreferencesContext' type64='{_SCPreferencesContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{_SCPreferencesContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field name='version'/>
<field name='info'/>
<field name='retain'/>
<field name='release'/>
<field name='copyDescription'/>
</struct>
<cftype name='SCBondStatusRef' gettypeid_func='SCBondStatusGetTypeID' type='^{__SCBondStatus=}' tollfree='__NSCFType'/>
<cftype name='SCDynamicStoreRef' gettypeid_func='SCDynamicStoreGetTypeID' type='^{__SCDynamicStore=}' tollfree='__NSCFType'/>
<cftype name='SCNetworkConnectionRef' gettypeid_func='SCNetworkConnectionGetTypeID' type='^{__SCNetworkConnection=}' tollfree='__NSCFType'/>
<cftype name='SCNetworkInterfaceRef' gettypeid_func='SCNetworkInterfaceGetTypeID' type='^{__SCNetworkInterface=}' tollfree='__NSCFType'/>
<cftype name='SCNetworkProtocolRef' gettypeid_func='SCNetworkProtocolGetTypeID' type='^{__SCNetworkProtocol=}' tollfree='__NSCFType'/>
<cftype name='SCNetworkReachabilityRef' gettypeid_func='SCNetworkReachabilityGetTypeID' type='^{__SCNetworkReachability=}' tollfree='__NSCFType'/>
<cftype name='SCNetworkServiceRef' gettypeid_func='SCNetworkServiceGetTypeID' type='^{__SCNetworkService=}' tollfree='__NSCFType'/>
<cftype name='SCNetworkSetRef' gettypeid_func='SCNetworkSetGetTypeID' type='^{__SCNetworkSet=}' tollfree='__NSCFType'/>
<cftype name='SCPreferencesRef' gettypeid_func='SCPreferencesGetTypeID' type='^{__SCPreferences=}' tollfree='__NSCFType'/>
<constant name='kCFErrorDomainSystemConfiguration' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCBondStatusDeviceAggregationStatus' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCBondStatusDeviceCollecting' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCBondStatusDeviceDistributing' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCCompAnyRegex' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCCompGlobal' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCCompHostNames' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCCompInterface' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCCompNetwork' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCCompService' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCCompSystem' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCCompUsers' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStoreDomainFile' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStoreDomainPlugin' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStoreDomainPrefs' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStoreDomainSetup' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStoreDomainState' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStorePropNetInterfaces' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStorePropNetPrimaryInterface' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStorePropNetPrimaryService' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStorePropNetServiceIDs' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStorePropSetupCurrentSet' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStorePropSetupLastUpdated' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCDynamicStoreUseSessionKeys' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNet6to4' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetAirPort' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetDHCP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetDNS' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetEthernet' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetFireWire' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetIPSec' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetIPv4' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetIPv6' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetInterface' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetL2TP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetLink' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetModem' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetPPP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetPPPSerial' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetPPPoE' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetPPTP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetProxies' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntNetSMB' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCEntUsersConsoleUser' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceIPv4' declared_type='SCNetworkInterfaceRef' const='true' type='^{__SCNetworkInterface=}'/>
<constant name='kSCNetworkInterfaceType6to4' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeBluetooth' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeBond' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeEthernet' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeFireWire' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeIEEE80211' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeIPSec' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeIPv4' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeIrDA' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeL2TP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeModem' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypePPP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypePPTP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeSerial' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeVLAN' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkInterfaceTypeWWAN' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkProtocolTypeDNS' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkProtocolTypeIPv4' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkProtocolTypeIPv6' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkProtocolTypeProxies' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCNetworkProtocolTypeSMB' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPrefCurrentSet' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPrefNetworkServices' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPrefSets' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPrefSystem' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropInterfaceName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropMACAddress' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNet6to4Relay' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetAirPortAllowNetCreation' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetAirPortAuthPassword' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetAirPortAuthPasswordEncryption' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetAirPortJoinMode' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetAirPortPowerEnabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetAirPortPreferredNetwork' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetAirPortSavePasswords' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSDomainName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSOptions' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSSearchDomains' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSSearchOrder' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSServerAddresses' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSServerPort' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSServerTimeout' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSSortList' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSSupplementalMatchDomains' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetDNSSupplementalMatchOrders' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetEthernetMTU' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetEthernetMediaOptions' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetEthernetMediaSubType' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecAuthenticationMethod' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecConnectTime' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecLocalCertificate' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecLocalIdentifier' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecLocalIdentifierType' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecRemoteAddress' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecSharedSecret' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecSharedSecretEncryption' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecStatus' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecXAuthEnabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecXAuthName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecXAuthPassword' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPSecXAuthPasswordEncryption' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv4Addresses' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv4BroadcastAddresses' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv4ConfigMethod' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv4DHCPClientID' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv4DestAddresses' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv4Router' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv4SubnetMasks' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv6Addresses' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv6ConfigMethod' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv6DestAddresses' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv6Flags' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv6PrefixLength' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetIPv6Router' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetInterfaceDeviceName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetInterfaceHardware' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetInterfaceSubType' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetInterfaceSupportsModemOnHold' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetInterfaceType' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetInterfaces' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetL2TPIPSecSharedSecret' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetL2TPIPSecSharedSecretEncryption' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetL2TPTransport' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetLinkActive' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetLinkDetaching' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetLocalHostName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemAccessPointName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemConnectSpeed' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemConnectionPersonality' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemConnectionScript' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemDataCompression' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemDeviceContextID' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemDeviceModel' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemDeviceVendor' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemDialMode' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemErrorCorrection' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemHoldCallWaitingAudibleAlert' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemHoldDisconnectOnAnswer' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemHoldEnabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemHoldReminder' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemHoldReminderTime' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemNote' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemPulseDial' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemSpeaker' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetModemSpeed' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetOverridePrimary' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPACSPEnabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPAuthEAPPlugins' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPAuthName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPAuthPassword' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPAuthPasswordEncryption' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPAuthPrompt' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPAuthProtocol' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCCPEnabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCCPMPPE128Enabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCCPMPPE40Enabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommAlternateRemoteAddress' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommConnectDelay' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommDisplayTerminalWindow' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommRedialCount' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommRedialEnabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommRedialInterval' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommRemoteAddress' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommTerminalScript' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPCommUseTerminalScript' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPConnectTime' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPDeviceLastCause' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPDialOnDemand' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPDisconnectOnFastUserSwitch' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPDisconnectOnIdle' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPDisconnectOnIdleTimer' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPDisconnectOnLogout' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPDisconnectOnSleep' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPDisconnectTime' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPIPCPCompressionVJ' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPIPCPUsePeerDNS' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPIdleReminder' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPIdleReminderTimer' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPCompressionACField' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPCompressionPField' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPEchoEnabled' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPEchoFailure' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPEchoInterval' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPMRU' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPMTU' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPReceiveACCM' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLCPTransmitACCM' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLastCause' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPLogfile' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPOverridePrimary' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPPlugins' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPRetryConnectTime' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPSessionTimer' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPStatus' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPUseSessionTimer' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetPPPVerboseLogging' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesExceptionsList' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesExcludeSimpleHostnames' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesFTPEnable' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesFTPPassive' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesFTPPort' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesFTPProxy' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesGopherEnable' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesGopherPort' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesGopherProxy' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesHTTPEnable' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesHTTPPort' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesHTTPProxy' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesHTTPSEnable' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesHTTPSPort' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesHTTPSProxy' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesProxyAutoConfigEnable' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesProxyAutoConfigURLString' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesProxyAutoDiscoveryEnable' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesRTSPEnable' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesRTSPPort' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesRTSPProxy' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesSOCKSEnable' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesSOCKSPort' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetProxiesSOCKSProxy' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetSMBNetBIOSName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetSMBNetBIOSNodeType' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetSMBNetBIOSScope' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetSMBWINSAddresses' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetSMBWorkgroup' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropNetServiceOrder' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropSystemComputerName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropSystemComputerNameEncoding' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropUserDefinedName' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCPropVersion' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCResvInactive' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCResvLink' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetAirPortAuthPasswordEncryptionKeychain' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetAirPortJoinModeAutomatic' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetAirPortJoinModePreferred' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetAirPortJoinModeRanked' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetAirPortJoinModeRecent' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetAirPortJoinModeStrongest' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPSecAuthenticationMethodCertificate' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPSecAuthenticationMethodHybrid' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPSecAuthenticationMethodSharedSecret' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPSecLocalIdentifierTypeKeyID' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPSecSharedSecretEncryptionKeychain' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPSecXAuthPasswordEncryptionKeychain' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPSecXAuthPasswordEncryptionPrompt' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv4ConfigMethodAutomatic' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv4ConfigMethodBOOTP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv4ConfigMethodDHCP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv4ConfigMethodINFORM' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv4ConfigMethodLinkLocal' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv4ConfigMethodManual' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv4ConfigMethodPPP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv6ConfigMethod6to4' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv6ConfigMethodAutomatic' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv6ConfigMethodManual' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetIPv6ConfigMethodRouterAdvertisement' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceSubTypeL2TP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceSubTypePPPSerial' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceSubTypePPPoE' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceSubTypePPTP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceType6to4' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceTypeEthernet' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceTypeFireWire' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceTypeIPSec' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetInterfaceTypePPP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetL2TPIPSecSharedSecretEncryptionKeychain' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetL2TPTransportIP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetL2TPTransportIPSec' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetModemDialModeIgnoreDialTone' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetModemDialModeManual' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetModemDialModeWaitForDialTone' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthPasswordEncryptionKeychain' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthPasswordEncryptionToken' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthPromptAfter' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthPromptBefore' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthProtocolCHAP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthProtocolEAP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthProtocolMSCHAP1' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthProtocolMSCHAP2' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetPPPAuthProtocolPAP' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetSMBNetBIOSNodeTypeBroadcast' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetSMBNetBIOSNodeTypeHybrid' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetSMBNetBIOSNodeTypeMixed' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<constant name='kSCValNetSMBNetBIOSNodeTypePeer' declared_type='CFStringRef' const='true' type='^{__CFString=}'/>
<string_constant name='kSCNetworkConnectionBytesIn' nsstring='true' value='BytesIn'/>
<string_constant name='kSCNetworkConnectionBytesOut' nsstring='true' value='BytesOut'/>
<string_constant name='kSCNetworkConnectionErrorsIn' nsstring='true' value='ErrorsIn'/>
<string_constant name='kSCNetworkConnectionErrorsOut' nsstring='true' value='ErrorsOut'/>
<string_constant name='kSCNetworkConnectionPacketsIn' nsstring='true' value='PacketsIn'/>
<string_constant name='kSCNetworkConnectionPacketsOut' nsstring='true' value='PacketsOut'/>
<string_constant name='kSCNetworkConnectionSelectionOptionOnDemandHostName' nsstring='true' value='OnDemandHostName'/>
<string_constant name='kSCNetworkConnectionSelectionOptionOnDemandRetry' nsstring='true' value='OnDemandRetry'/>
<enum name='kSCBondStatusLinkInvalid' value='1'/>
<enum name='kSCBondStatusNoPartner' value='2'/>
<enum name='kSCBondStatusNotInActiveGroup' value='3'/>
<enum name='kSCBondStatusOK' value='0'/>
<enum name='kSCBondStatusUnknown' value='999'/>
<enum name='kSCNetworkConnectionConnected' value='2'/>
<enum name='kSCNetworkConnectionConnecting' value='1'/>
<enum name='kSCNetworkConnectionDisconnected' value='0'/>
<enum name='kSCNetworkConnectionDisconnecting' value='3'/>
<enum name='kSCNetworkConnectionInvalid' value='-1'/>
<enum name='kSCNetworkConnectionPPPAuthenticating' value='5'/>
<enum name='kSCNetworkConnectionPPPConnected' value='8'/>
<enum name='kSCNetworkConnectionPPPConnectingLink' value='2'/>
<enum name='kSCNetworkConnectionPPPDialOnTraffic' value='3'/>
<enum name='kSCNetworkConnectionPPPDisconnected' value='0'/>
<enum name='kSCNetworkConnectionPPPDisconnectingLink' value='10'/>
<enum name='kSCNetworkConnectionPPPHoldingLinkOff' value='11'/>
<enum name='kSCNetworkConnectionPPPInitializing' value='1'/>
<enum name='kSCNetworkConnectionPPPNegotiatingLink' value='4'/>
<enum name='kSCNetworkConnectionPPPNegotiatingNetwork' value='7'/>
<enum name='kSCNetworkConnectionPPPSuspended' value='12'/>
<enum name='kSCNetworkConnectionPPPTerminating' value='9'/>
<enum name='kSCNetworkConnectionPPPWaitingForCallBack' value='6'/>
<enum name='kSCNetworkConnectionPPPWaitingForRedial' value='13'/>
<enum name='kSCNetworkFlagsConnectionAutomatic' value='8'/>
<enum name='kSCNetworkFlagsConnectionRequired' value='4'/>
<enum name='kSCNetworkFlagsInterventionRequired' value='16'/>
<enum name='kSCNetworkFlagsIsDirect' value='131072'/>
<enum name='kSCNetworkFlagsIsLocalAddress' value='65536'/>
<enum name='kSCNetworkFlagsReachable' value='2'/>
<enum name='kSCNetworkFlagsTransientConnection' value='1'/>
<enum name='kSCNetworkReachabilityFlagsConnectionAutomatic' value='8'/>
<enum name='kSCNetworkReachabilityFlagsConnectionOnDemand' value='32'/>
<enum name='kSCNetworkReachabilityFlagsConnectionOnTraffic' value='8'/>
<enum name='kSCNetworkReachabilityFlagsConnectionRequired' value='4'/>
<enum name='kSCNetworkReachabilityFlagsInterventionRequired' value='16'/>
<enum name='kSCNetworkReachabilityFlagsIsDirect' value='131072'/>
<enum name='kSCNetworkReachabilityFlagsIsLocalAddress' value='65536'/>
<enum name='kSCNetworkReachabilityFlagsReachable' value='2'/>
<enum name='kSCNetworkReachabilityFlagsTransientConnection' value='1'/>
<enum name='kSCPreferencesNotificationApply' value='2'/>
<enum name='kSCPreferencesNotificationCommit' value='1'/>
<enum name='kSCStatusAccessError' value='1003'/>
<enum name='kSCStatusConnectionNoService' value='5001'/>
<enum name='kSCStatusFailed' value='1001'/>
<enum name='kSCStatusInvalidArgument' value='1002'/>
<enum name='kSCStatusKeyExists' value='1005'/>
<enum name='kSCStatusLocked' value='1006'/>
<enum name='kSCStatusMaxLink' value='3006'/>
<enum name='kSCStatusNeedLock' value='1007'/>
<enum name='kSCStatusNoConfigFile' value='3003'/>
<enum name='kSCStatusNoKey' value='1004'/>
<enum name='kSCStatusNoLink' value='3004'/>
<enum name='kSCStatusNoPrefsSession' value='3001'/>
<enum name='kSCStatusNoStoreServer' value='2002'/>
<enum name='kSCStatusNoStoreSession' value='2001'/>
<enum name='kSCStatusNotifierActive' value='2003'/>
<enum name='kSCStatusOK' value='0'/>
<enum name='kSCStatusPrefsBusy' value='3002'/>
<enum name='kSCStatusReachabilityUnknown' value='4001'/>
<enum name='kSCStatusStale' value='3005'/>
<function name='DHCPClientPreferencesCopyApplicationOptions'>
<arg name='applicationID' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='count' declared_type='CFIndex*' type64='^q' type='^i' type_modifier='o'/>
<retval c_array_length_in_arg='1' declared_type='UInt8*' type='*'/>
</function>
<function name='DHCPClientPreferencesSetApplicationOptions'>
<arg name='applicationID' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='options' c_array_length_in_arg='2' declared_type='UInt8*' type='*' type_modifier='n'/>
<arg name='count' declared_type='CFIndex' type64='q' type='l'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='DHCPInfoGetLeaseStartTime'>
<arg name='info' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='CFDateRef' type='^{__CFDate=}'/>
</function>
<function name='DHCPInfoGetOptionData'>
<arg name='info' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg name='code' declared_type='UInt8' type='C'/>
<retval declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='SCBondInterfaceCopyAll'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCBondInterfaceCopyAvailableMemberInterfaces'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCBondInterfaceCopyStatus'>
<arg name='bond' declared_type='SCBondInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='SCBondStatusRef' already_retained='true' type='^{__SCBondStatus=}'/>
</function>
<function name='SCBondInterfaceCreate'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='SCBondInterfaceRef' type='^{__SCNetworkInterface=}'/>
</function>
<function name='SCBondInterfaceGetMemberInterfaces'>
<arg name='bond' declared_type='SCBondInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCBondInterfaceGetOptions'>
<arg name='bond' declared_type='SCBondInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCBondInterfaceRemove'>
<arg name='bond' declared_type='SCBondInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCBondInterfaceSetLocalizedDisplayName'>
<arg name='bond' declared_type='SCBondInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='newName' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCBondInterfaceSetMemberInterfaces'>
<arg name='bond' declared_type='SCBondInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='members' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCBondInterfaceSetOptions'>
<arg name='bond' declared_type='SCBondInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='newOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCBondStatusGetInterfaceStatus'>
<arg name='bondStatus' declared_type='SCBondStatusRef' type='^{__SCBondStatus=}'/>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCBondStatusGetMemberInterfaces'>
<arg name='bondStatus' declared_type='SCBondStatusRef' type='^{__SCBondStatus=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCBondStatusGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCCopyLastError'>
<retval declared_type='CFErrorRef' type='^{__CFError=}'/>
</function>
<function name='SCDynamicStoreAddTemporaryValue'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='value' declared_type='CFPropertyListRef' type='@'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCDynamicStoreAddValue'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='value' declared_type='CFPropertyListRef' type='@'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCDynamicStoreCopyComputerName'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='nameEncoding' declared_type='CFStringEncoding*' type='^I' type_modifier='o'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreCopyConsoleUser'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='uid' declared_type='uid_t*' type='^I' type_modifier='o'/>
<arg name='gid' declared_type='gid_t*' type='^I' type_modifier='o'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreCopyDHCPInfo'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='serviceID' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCDynamicStoreCopyKeyList'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='pattern' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCDynamicStoreCopyLocalHostName'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreCopyLocation'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreCopyMultiple'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='keys' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<arg name='patterns' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCDynamicStoreCopyNotifiedKeys'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCDynamicStoreCopyProxies'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCDynamicStoreCopyValue'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFPropertyListRef' already_retained='true' type='@'/>
</function>
<function name='SCDynamicStoreCreate'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='callout' function_pointer='true' declared_type='SCDynamicStoreCallBack' type='^?' type_modifier='n'>
<arg declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg declared_type='CFArrayRef' type='^{__CFArray=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='context' declared_type='SCDynamicStoreContext*' type64='^{_SCNetworkReachabilityContext=q^v^?^?^?}' type='^{_SCNetworkReachabilityContext=i^v^?^?^?}' type_modifier='n'/>
<retval declared_type='SCDynamicStoreRef' already_retained='true' type='^{__SCDynamicStore=}'/>
</function>
<function name='SCDynamicStoreCreateRunLoopSource'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='order' declared_type='CFIndex' type64='q' type='l'/>
<retval declared_type='CFRunLoopSourceRef' type='^{__CFRunLoopSource=}'/>
</function>
<function name='SCDynamicStoreCreateWithOptions'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='storeOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg name='callout' function_pointer='true' declared_type='SCDynamicStoreCallBack' type='^?' type_modifier='n'>
<arg declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg declared_type='CFArrayRef' type='^{__CFArray=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='context' declared_type='SCDynamicStoreContext*' type64='^{_SCNetworkReachabilityContext=q^v^?^?^?}' type='^{_SCNetworkReachabilityContext=i^v^?^?^?}' type_modifier='n'/>
<retval declared_type='SCDynamicStoreRef' already_retained='true' type='^{__SCDynamicStore=}'/>
</function>
<function name='SCDynamicStoreGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCDynamicStoreKeyCreate' variadic='true'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='fmt' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateComputerName'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateConsoleUser'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateHostNames'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateLocation'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateNetworkGlobalEntity'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='domain' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='entity' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateNetworkInterface'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='domain' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateNetworkInterfaceEntity'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='domain' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='ifname' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='entity' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateNetworkServiceEntity'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='domain' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='serviceID' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='entity' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreKeyCreateProxies'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCDynamicStoreNotifyValue'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCDynamicStoreRemoveValue'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCDynamicStoreSetDispatchQueue'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='queue' declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCDynamicStoreSetMultiple'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='keysToSet' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg name='keysToRemove' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<arg name='keysToNotify' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCDynamicStoreSetNotificationKeys'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='keys' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<arg name='patterns' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCDynamicStoreSetValue'>
<arg name='store' declared_type='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='value' declared_type='CFPropertyListRef' type='@'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCError'>
<retval declared_type='int' type='i'/>
</function>
<function name='SCErrorString'>
<arg name='status' declared_type='int' type='i'/>
<retval declared_type='char*' const='true' type='*'/>
</function>
<function name='SCNetworkCheckReachabilityByAddress'>
<arg name='address' declared_type='struct sockaddr*' const='true' type='^{sockaddr=CC[14c]}' type_modifier='n'/>
<arg name='addrlen' declared_type='socklen_t' type='I'/>
<arg name='flags' declared_type='SCNetworkConnectionFlags*' type='^I' type_modifier='o'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkCheckReachabilityByName'>
<arg name='nodename' declared_type='char*' const='true' type='*'/>
<arg name='flags' declared_type='SCNetworkConnectionFlags*' type='^I' type_modifier='o'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkConnectionCopyExtendedStatus'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCNetworkConnectionCopyServiceID'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkConnectionCopyStatistics'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCNetworkConnectionCopyUserOptions'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCNetworkConnectionCopyUserPreferences'>
<arg name='selectionOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg name='serviceID' declared_type='CFStringRef*' type='r^^{__CFString}' type_modifier='o'/>
<arg name='userOptions' declared_type='CFDictionaryRef*' type='r^^{__CFDictionary}' type_modifier='o'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkConnectionCreateWithServiceID'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='serviceID' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='callout' function_pointer='true' declared_type='SCNetworkConnectionCallBack' type='^?' type_modifier='n'>
<arg declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<arg declared_type='SCNetworkConnectionStatus' type='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='context' declared_type='SCNetworkConnectionContext*' type64='^{_SCNetworkReachabilityContext=q^v^?^?^?}' type='^{_SCNetworkReachabilityContext=i^v^?^?^?}' type_modifier='n'/>
<retval declared_type='SCNetworkConnectionRef' already_retained='true' type='^{__SCNetworkConnection=}'/>
</function>
<function name='SCNetworkConnectionGetStatus'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<retval declared_type='SCNetworkConnectionStatus' type='i'/>
</function>
<function name='SCNetworkConnectionGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCNetworkConnectionScheduleWithRunLoop'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
<arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkConnectionSetDispatchQueue'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<arg name='queue' declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkConnectionStart'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<arg name='userOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg name='linger' declared_type='Boolean' type='B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkConnectionStop'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<arg name='forceDisconnect' declared_type='Boolean' type='B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkConnectionUnscheduleFromRunLoop'>
<arg name='connection' declared_type='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
<arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkInterfaceCopyAll'>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkInterfaceCopyMTU'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='mtu_cur' declared_type='int*' type='^i' type_modifier='o'/>
<arg name='mtu_min' declared_type='int*' type='^i' type_modifier='o'/>
<arg name='mtu_max' declared_type='int*' type='^i' type_modifier='o'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkInterfaceCopyMediaOptions'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='current' declared_type='CFDictionaryRef*' type='r^^{__CFDictionary}' type_modifier='o'/>
<arg name='active' declared_type='CFDictionaryRef*' type='r^^{__CFDictionary}' type_modifier='o'/>
<arg name='available' declared_type='CFArrayRef*' type='r^^{__CFArray}' type_modifier='o'/>
<arg name='filter' declared_type='Boolean' type='B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkInterfaceCopyMediaSubTypeOptions'>
<arg name='available' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<arg name='subType' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkInterfaceCopyMediaSubTypes'>
<arg name='available' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkInterfaceCreateWithInterface'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='interfaceType' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='SCNetworkInterfaceRef' already_retained='true' type='^{__SCNetworkInterface=}'/>
</function>
<function name='SCNetworkInterfaceForceConfigurationRefresh'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkInterfaceGetBSDName'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkInterfaceGetConfiguration'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCNetworkInterfaceGetExtendedConfiguration'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='extendedType' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCNetworkInterfaceGetHardwareAddressString'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkInterfaceGetInterface'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
</function>
<function name='SCNetworkInterfaceGetInterfaceType'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkInterfaceGetLocalizedDisplayName'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkInterfaceGetSupportedInterfaceTypes'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkInterfaceGetSupportedProtocolTypes'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkInterfaceGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCNetworkInterfaceRefreshConfiguration'>
<arg name='ifName' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkInterfaceSetConfiguration'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='config' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkInterfaceSetExtendedConfiguration'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='extendedType' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='config' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkInterfaceSetMTU'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='mtu' declared_type='int' type='i'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkInterfaceSetMediaOptions'>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='subtype' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='options' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkProtocolGetConfiguration'>
<arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCNetworkProtocolGetEnabled'>
<arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkProtocolGetProtocolType'>
<arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkProtocolGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCNetworkProtocolSetConfiguration'>
<arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
<arg name='config' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkProtocolSetEnabled'>
<arg name='protocol' declared_type='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
<arg name='enabled' declared_type='Boolean' type='B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilityCreateWithAddress'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='address' declared_type='struct sockaddr*' const='true' type='^{sockaddr=CC[14c]}' type_modifier='n'/>
<retval declared_type='SCNetworkReachabilityRef' already_retained='true' type='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityCreateWithAddressPair'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='localAddress' declared_type='struct sockaddr*' const='true' type='^{sockaddr=CC[14c]}' type_modifier='n'/>
<arg name='remoteAddress' declared_type='struct sockaddr*' const='true' type='^{sockaddr=CC[14c]}' type_modifier='n'/>
<retval declared_type='SCNetworkReachabilityRef' already_retained='true' type='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityCreateWithName'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='nodename' declared_type='char*' const='true' type='*'/>
<retval declared_type='SCNetworkReachabilityRef' already_retained='true' type='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityGetFlags'>
<arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
<arg name='flags' declared_type='SCNetworkReachabilityFlags*' type='^I' type_modifier='o'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilityGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCNetworkReachabilityScheduleWithRunLoop'>
<arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
<arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
<arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilitySetCallback'>
<arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
<arg name='callout' function_pointer='true' declared_type='SCNetworkReachabilityCallBack' type='^?' type_modifier='n'>
<arg declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
<arg declared_type='SCNetworkReachabilityFlags' type='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='context' declared_type='SCNetworkReachabilityContext*' type64='^{_SCNetworkReachabilityContext=q^v^?^?^?}' type='^{_SCNetworkReachabilityContext=i^v^?^?^?}' type_modifier='n'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilitySetDispatchQueue'>
<arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
<arg name='queue' declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilityUnscheduleFromRunLoop'>
<arg name='target' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
<arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
<arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkServiceAddProtocolType'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<arg name='protocolType' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkServiceCopy'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='serviceID' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='SCNetworkServiceRef' already_retained='true' type='^{__SCNetworkService=}'/>
</function>
<function name='SCNetworkServiceCopyAll'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkServiceCopyProtocol'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<arg name='protocolType' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='SCNetworkProtocolRef' already_retained='true' type='^{__SCNetworkProtocol=}'/>
</function>
<function name='SCNetworkServiceCopyProtocols'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkServiceCreate'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='SCNetworkServiceRef' already_retained='true' type='^{__SCNetworkService=}'/>
</function>
<function name='SCNetworkServiceEstablishDefaultConfiguration'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkServiceGetEnabled'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkServiceGetInterface'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
</function>
<function name='SCNetworkServiceGetName'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkServiceGetServiceID'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkServiceGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCNetworkServiceRemove'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkServiceRemoveProtocolType'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<arg name='protocolType' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkServiceSetEnabled'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<arg name='enabled' declared_type='Boolean' type='B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkServiceSetName'>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkSetAddService'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkSetContainsInterface'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<arg name='interface' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkSetCopy'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='setID' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='SCNetworkSetRef' already_retained='true' type='^{__SCNetworkSet=}'/>
</function>
<function name='SCNetworkSetCopyAll'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkSetCopyCurrent'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='SCNetworkSetRef' already_retained='true' type='^{__SCNetworkSet=}'/>
</function>
<function name='SCNetworkSetCopyServices'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkSetCreate'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='SCNetworkSetRef' already_retained='true' type='^{__SCNetworkSet=}'/>
</function>
<function name='SCNetworkSetGetName'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkSetGetServiceOrder'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCNetworkSetGetSetID'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCNetworkSetGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCNetworkSetRemove'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkSetRemoveService'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<arg name='service' declared_type='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkSetSetCurrent'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkSetSetName'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkSetSetServiceOrder'>
<arg name='set' declared_type='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<arg name='newOrder' declared_type='CFArrayRef' type='^{__CFArray=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesAddValue'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='value' declared_type='CFPropertyListRef' type='@'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesApplyChanges'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesCommitChanges'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesCopyKeyList'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCPreferencesCreate'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='prefsID' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='SCPreferencesRef' already_retained='true' type='^{__SCPreferences=}'/>
</function>
<function name='SCPreferencesCreateWithAuthorization'>
<arg name='allocator' declared_type='CFAllocatorRef' type='^{__CFAllocator=}'/>
<arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='prefsID' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='authorization' declared_type='AuthorizationRef' type='^{AuthorizationOpaqueRef=}'/>
<retval declared_type='SCPreferencesRef' already_retained='true' type='^{__SCPreferences=}'/>
</function>
<function name='SCPreferencesGetSignature'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='SCPreferencesGetTypeID'>
<retval declared_type='CFTypeID' type64='Q' type='L'/>
</function>
<function name='SCPreferencesGetValue'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFPropertyListRef' type='@'/>
</function>
<function name='SCPreferencesLock'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='wait' declared_type='Boolean' type='B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesPathCreateUniqueChild'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='prefix' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCPreferencesPathGetLink'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SCPreferencesPathGetValue'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCPreferencesPathRemoveValue'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesPathSetLink'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='link' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesPathSetValue'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='path' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='value' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesRemoveValue'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesScheduleWithRunLoop'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
<arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesSetCallback'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='callout' function_pointer='true' declared_type='SCPreferencesCallBack' type='^?' type_modifier='n'>
<arg declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg declared_type='SCPreferencesNotification' type='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='context' declared_type='SCPreferencesContext*' type64='^{_SCNetworkReachabilityContext=q^v^?^?^?}' type='^{_SCNetworkReachabilityContext=i^v^?^?^?}' type_modifier='n'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesSetComputerName'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='nameEncoding' declared_type='CFStringEncoding' type64='I' type='L'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesSetDispatchQueue'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='queue' declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesSetLocalHostName'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='name' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesSetValue'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='key' declared_type='CFStringRef' type='^{__CFString=}'/>
<arg name='value' declared_type='CFPropertyListRef' type='@'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesSynchronize'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
</function>
<function name='SCPreferencesUnlock'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCPreferencesUnscheduleFromRunLoop'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='runLoop' declared_type='CFRunLoopRef' type='^{__CFRunLoop=}'/>
<arg name='runLoopMode' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCVLANInterfaceCopyAll'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCVLANInterfaceCopyAvailablePhysicalInterfaces'>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SCVLANInterfaceCreate'>
<arg name='prefs' declared_type='SCPreferencesRef' type='^{__SCPreferences=}'/>
<arg name='physical' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='tag' declared_type='CFNumberRef' type='^{__CFNumber=}'/>
<retval declared_type='SCVLANInterfaceRef' type='^{__SCNetworkInterface=}'/>
</function>
<function name='SCVLANInterfaceGetOptions'>
<arg name='vlan' declared_type='SCVLANInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SCVLANInterfaceGetPhysicalInterface'>
<arg name='vlan' declared_type='SCVLANInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
</function>
<function name='SCVLANInterfaceGetTag'>
<arg name='vlan' declared_type='SCVLANInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='CFNumberRef' type='^{__CFNumber=}'/>
</function>
<function name='SCVLANInterfaceRemove'>
<arg name='vlan' declared_type='SCVLANInterfaceRef' type='^{__SCNetworkInterface=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCVLANInterfaceSetLocalizedDisplayName'>
<arg name='vlan' declared_type='SCVLANInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='newName' declared_type='CFStringRef' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCVLANInterfaceSetOptions'>
<arg name='vlan' declared_type='SCVLANInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='newOptions' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCVLANInterfaceSetPhysicalInterfaceAndTag'>
<arg name='vlan' declared_type='SCVLANInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='physical' declared_type='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<arg name='tag' declared_type='CFNumberRef' type='^{__CFNumber=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
</signatures>